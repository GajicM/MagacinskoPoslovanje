// <auto-generated />
using System;
using MagacinskoPoslovanje;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MagacinskoPoslovanje.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MagacinskoPoslovanje.Firma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Dobavljac")
                        .HasColumnType("bit");

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Proizvodjac")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Magacin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Magacin");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Proizvod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Promet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("FirmaId")
                        .HasColumnType("bigint");

                    b.Property<long>("Kolicina")
                        .HasColumnType("bigint");

                    b.Property<long>("StavkaMagacinaId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipPrometa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("StavkaMagacinaId");

                    b.ToTable("Promet");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Racun", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("FirmaId")
                        .HasColumnType("bigint");

                    b.Property<int>("TipPrometa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.StavkaMagacina", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<long>("MagacinId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProizvodId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MagacinId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("StavkaMagacina");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.StavkaRacuna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<long>("RacunId")
                        .HasColumnType("bigint");

                    b.Property<long>("StavkaMagacinaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RacunId");

                    b.HasIndex("StavkaMagacinaId");

                    b.ToTable("StavkaRacuna");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Promet", b =>
                {
                    b.HasOne("MagacinskoPoslovanje.Firma", "Firma")
                        .WithMany("Prometi")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MagacinskoPoslovanje.StavkaMagacina", "StavkaMagacina")
                        .WithMany("Prometi")
                        .HasForeignKey("StavkaMagacinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("StavkaMagacina");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Racun", b =>
                {
                    b.HasOne("MagacinskoPoslovanje.Firma", "Firma")
                        .WithMany("Racuni")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.StavkaMagacina", b =>
                {
                    b.HasOne("MagacinskoPoslovanje.Magacin", "Magacin")
                        .WithMany("StavkeMagacina")
                        .HasForeignKey("MagacinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MagacinskoPoslovanje.Proizvod", "Proizvod")
                        .WithMany("StavkeMagacina")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Magacin");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.StavkaRacuna", b =>
                {
                    b.HasOne("MagacinskoPoslovanje.Racun", "Racun")
                        .WithMany("StavkeRacuna")
                        .HasForeignKey("RacunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MagacinskoPoslovanje.StavkaMagacina", "StavkaMagacina")
                        .WithMany("StavkeRacuna")
                        .HasForeignKey("StavkaMagacinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Racun");

                    b.Navigation("StavkaMagacina");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Firma", b =>
                {
                    b.Navigation("Prometi");

                    b.Navigation("Racuni");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Magacin", b =>
                {
                    b.Navigation("StavkeMagacina");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Proizvod", b =>
                {
                    b.Navigation("StavkeMagacina");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.Racun", b =>
                {
                    b.Navigation("StavkeRacuna");
                });

            modelBuilder.Entity("MagacinskoPoslovanje.StavkaMagacina", b =>
                {
                    b.Navigation("Prometi");

                    b.Navigation("StavkeRacuna");
                });
#pragma warning restore 612, 618
        }
    }
}
